
var message = "hello, world!";
var message_len = $sizeof(message);

var other_message = "bye, world!";
var other_message_len = $sizeof(other_message);

import proc nativeTest;
import proc alloc;
import proc puts;

//entrypoint procedure
entry proc main 
{
    a0 = move other_message;
    a1 = move other_message_len;
    call nativeTest;

    c0 = clear;

    loop_begin: {
        c1 = neql c0, 10;
        c0 = iadd c0, 1;

        jumpif c1, loop_begin;
    }

    a7 = move 10;
    a6 = move 0xa3;
    a5 = move 0xb4;

    call fmadd;

    a7 = move exit;

exit:
    return;
}

//fused multiply add
proc fmadd {
    a7 = iadd a0, a1;
    a7 = imul a7, a2;

    return;
}

/* print function */
proc print {
    jump end;
    nullop; //dead code
    nullop;
    nullop;
end:
    return;
}

export proc recurse {
    a7 = iadd a0, a1;
    call recurse;
    unreachable;
}